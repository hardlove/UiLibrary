apply plugin: 'com.android.library'
apply from: "../jitpack.gradle"
android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 10
        versionName "2.0.1"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.blankj:utilcodex:1.30.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.18'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.google.code.gson:gson:2.8.6'
}



apply plugin: 'maven-publish'
task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

publishing {
    publications {
        Production(MavenPublication) {
            // 使用方引用 implementation "com.github.hardlove.UiLibrary:PermissionHelper:2.4.1"
            groupId = "com.github.hardlove.UiLibrary"
            artifactId = "PermissionHelper"
            version = "2.4.41"
            afterEvaluate {
                artifact(tasks.getByName("bundleReleaseAar"))
            }
            artifact generateSourcesJar


            //添加三方依赖库
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    //遍历依赖库
                    if (it.group != null && (it.name != null && "unspecified" != it.name) && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'implementation')
                    }

                }
            }
        }
    }
    repositories {
        maven {
//            url = "$rootDir/repos"
//            url = "${rootDir.parent}/repos"
            url = "D:\\Work\\repos"
//            url = "../../../repos"
        }
        mavenLocal()
    }
}
